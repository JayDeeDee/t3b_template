//
// SASS Mixins
//
// Styleguide 1.2
//


//
// High density Image-Dimensions Mixin($file-name, $width, $height)
//
// Create output which displays an image optimized for high density screens.
//
// Markup:
// .selector {
// 	@include hdpi-img('brand-logo.png');
// }
//
// Styleguide 1.2.1
//
@mixin hdpi-img($file-name, $width, $height) {
	background-size: $width/2 $height/2;
	background-image: image-url('#{$file-name}');
}


//
// Image-Replacement Mixin($imagePath)
//
// A image-replacement mixin which generates the image-dimensions as CSS rules and
// @extends the .ir rule inside the _helper.scss file.
// Default $display-mode is set to 'block'.
//
// Markup:
// .selector {
//   @include image-replacement('image.png');
// }
//
// Styleguide 1.2.2
//
@mixin image-replacement($file-name, $display-mode: block, $width: auto, $height: auto) {
	@if $file-name { // Output the image dimensions if an image is passed as an argument
		display: $display-mode;
		width: $width;
		height: $height;
		background-image: image-url('#{$file-name}');
		@extend .ir;
	}
}


//
// REM Unit Mixin($property, $value)
//
// Creates a property independent 'rem' calculation with a pixel fallback, default property is set to 'font-size'.
//
// Markup:
// .selector {
//   @include rem($property: font-size, $value: 18);
// }
//
// Styleguide 1.2.3
//
@mixin rem($property: font-size, $value: 16) {
	#{$property}: $value +px;
	#{$property}: ($value / 16)*1rem;
}


//
// Font-Size Mixin($font-size, $append-vrythm)
//
// Create a fully formed type style (sizing and vertical rhythm) by passing in a single value.
//
// Markup:
// .selector {
//   @include rem($size: 16, $append-vrythm: true);
// }
//
// Styleguide 1.2.4
//
@mixin font-size($font-size, $append-vrythm: false) {
	@include rem(font-size, $font-size);
	@if $append-vrythm {
		line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
	}
}


//
// CSS Triangle Mixin($triangle-size, $triangle-color, $triangle-direction)
//
// Create a css arrow as per http://cssarrowplease.com/.
//
// Markup:
// .selector:after {
//   position: absolute;
//   top: -5px;
//   left: 50%;
//   margin-left: -2.5px;
//   @include css-triangle(5px, #fff, bottom);
// }
//
// Styleguide 1.2.5
//
@mixin cssTriangle($triangle-size, $triangle-color, $triangle-direction) {
	content: "";
	display: block;
	width: 0;
	height: 0;
	border: solid $triangle-size;
	@if ($triangle-direction == top)    { border-color: $triangle-color transparent transparent transparent; }
	@if ($triangle-direction == bottom) { border-color: transparent transparent $triangle-color transparent; }
	@if ($triangle-direction == left)   { border-color: transparent transparent transparent $triangle-color; }
	@if ($triangle-direction == right)  { border-color: transparent $triangle-color transparent transparent; }
}
