/*
Headings

Basic styling for headings and sub-headings

Styleguide 4
*/


/* =============================================================================
$ Headings
================================================================================ */
h1, h2, h3,
h4, h5, h6 {
	@if map-get($headings, fontFamily) { font-family: map-get($headings, fontFamily); }
	font-weight: map-get($headings, fontWeight);
	color: map-get($headings, color);
	/**
	 * Optimized kerning for large font sizes
	 * use this only on large font-sizes (f.e. headings) to avoid performance issues
	 */
	text-rendering: optimizeLegibility;
}

/*
Heading modifiers

.h1 - Style the `<h#>`-element like a standard `<h1>`-element.
.h2 - Style the `<h#>`-element like a standard `<h2>`-element.
.h3 - Style the `<h#>`-element like a standard `<h3>`-element.
.h4 - Style the `<h#>`-element like a standard `<h4>`-element.
.h5 - Style the `<h#>`-element like a standard `<h5>`-element.
.h6 - Style the `<h#>`-element like a standard `<h6>`-element.

Markup:
<h1 class="{$modifiers}">I am an first-level heading</h1>

Styleguide 4.0.1
*/
@each $key, $value in map-get($headings, elements) {
	$headingFontSize: map-fetch($headings, elements $key font-size);
	$additionalRules: map-removeKeys(map-fetch($headings, elements $key), font-size color);
	#{$key}, .#{$key} {
		@include font-size($headingFontSize, $append-vrythm: false);
		@each $declaration, $value in $additionalRules {
			#{$declaration}: $value;
		}
	}
}
